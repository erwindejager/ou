%% Automatically generated by EDJ BPEL2DCG Transformer : Sun Dec 09 16:27:59 CET 2018


grammar_HandleRequest --> ["v0"], c_main, ["v"].


c_onm_handleRequest --> ["handleRequest"], ["PrepareHandleRequest"].

c_onm_handleComplexRequest --> ["handleComplexRequest"], ["PrepareHandleComplexRequest"].

c_onm_rejectRequest --> ["rejectRequest"], ["PrepareRejectRequest"].

c_onm_reinjectRequest --> ["reinjectRequest"], ["PrepareReinjectRequest"].

c_pick_HandleService --> ["HandleService"], c_onm_handleRequest.

c_pick_HandleService --> ["HandleService"], c_onm_handleComplexRequest.

c_pick_HandleService --> ["HandleService"], c_onm_rejectRequest.

c_pick_HandleService --> ["HandleService"], c_onm_reinjectRequest.

c_catch_ClassifyRequestWS --> [].

c_catch_ClassifyRequestWS --> ["PrepareExceptionTask"], ["InvokeCreateExceptionTask"], ["StopProcess"], ["@END@"].

c_catch_CheckProcessabilityWS --> [].

c_catch_CheckProcessabilityWS --> ["PrepareExceptionTask"], ["InvokeCreateExceptionTask"], ["StopProcess"], ["@END@"].

c_catch_ProcessRequestWS --> [].

c_catch_ProcessRequestWS --> ["PrepareExceptionTask"], ["InvokeCreateExceptionTask"], ["StopProcess"], ["@END@"].

c_catch_RejectRequestWS --> [].

c_catch_RejectRequestWS --> ["PrepareExceptionTask"], ["InvokeCreateExceptionTask"], ["StopProcess"], ["@END@"].

c_if_IfValid --> ["else"], ["PrepareRejectReq"], ["RejectRequestWS"], c_catch_RejectRequestWS.

c_if_IfValid --> ["IfValid"], ["PrepareProcessRequest"], ["ProcessRequestWS"], c_catch_ProcessRequestWS.

c_catch_CreateManualTaskWS --> [].

c_catch_CreateManualTaskWS --> ["PrepareExceptionTask"], ["InvokeCreateExceptionTask"], ["StopProcess"], ["@END@"].

c_if_IfStandardRequest --> ["else"], ["PrepareCreateManualTask"], ["CreateManualTaskWS"], c_catch_CreateManualTaskWS.

c_if_IfStandardRequest --> ["IfStandardRequest"], ["PrepareCheckProcessability"], ["CheckProcessabilityWS"], c_catch_CheckProcessabilityWS, ["AssignValid"], c_if_IfValid.


c_if_NotReinjectHandleRequest --> [].

c_if_NotReinjectHandleRequest --> ["NotReinjectHandleRequest"], ["PrepareHandleRequestReply"], ["HandleRequestReply"], ["@END@"].

c_if_IfValidComplex --> ["else"], ["PrepareRejectReq"], ["RejectRequestWS"], c_catch_RejectRequestWS.

c_if_IfValidComplex --> ["IfValidComplex"], ["PrepareProcessRequest"], ["ProcessRequestWS"], c_catch_ProcessRequestWS.


c_if_NotReinjectHandleComplexRequest --> [].

c_if_NotReinjectHandleComplexRequest --> ["NotReinjectHandleComplexRequest"], ["PrepareHandleComplexRequestReply"], ["HandleComplexRequestReply"], ["@END@"].

c_if_HandleService --> ["elseif"], ["PrepareCheckProcessability"], ["CheckProcessabilityWS"], c_catch_CheckProcessabilityWS, ["AssignValid"], c_if_IfValidComplex, c_if_NotReinjectHandleComplexRequest.

c_catch_InvokeRejectRequestWS --> [].

c_catch_InvokeRejectRequestWS --> ["PrepareExceptionTask"], ["InvokeCreateExceptionTask"], ["StopProcess"], ["@END@"].


c_if_NotReinjectRejectRequest --> [].

c_if_NotReinjectRejectRequest --> ["NotReinjectRejectRequest"], ["PrepareRejectRequestReply"], ["RejectRequestReply"], ["@END@"].

c_if_HandleService --> ["elseif"], ["PrepareInvokeRejectRequest"], ["InvokeRejectRequestWS"], c_catch_InvokeRejectRequestWS, c_if_NotReinjectRejectRequest.

c_if_HandleService --> ["else"], ["UnknownRequest"].

c_if_HandleService --> ["HandleService"], ["PrepareClassifyRequest"], ["ClassifyRequestWS"], c_catch_ClassifyRequestWS, ["AssignRequestType"], c_if_IfStandardRequest, c_if_NotReinjectHandleRequest.


c_if_IfReinject --> [].

c_if_IfReinject --> ["IfReinject"], ["PrepareReinjectRequestReply"], ["ReinjectRequestReply"], ["@END@"].

c_main --> c_pick_HandleService, c_if_HandleService, c_if_IfReinject.


stripRule(_, [], []). 
stripRule(T, [T|_], ["v"]). 
stripRule(T, [X|L], [X|NL]) :- stripRule(T, L, NL). 

stripRules([],[]).
stripRules([X|L],[X1|L1]) :- stripRule("@END@", X, X1), stripRules(L, L1).

start:-
    open('HandleRequest.txt',write,OS),
	findall(X, phrase(grammar_HandleRequest,X,[]),AS),
	stripRules(AS,AS1),
	list_to_set(AS1, AsSet),
    forall((member(N,AsSet)), writeln(OS,N)),
    close(OS).

 