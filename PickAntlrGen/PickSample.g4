// Automatically generated by EDJ BPEL2CFG Transformer : Sat Mar 24 17:07:37 CET 2018

grammar PickSample;

options {language=Java;}

@header {
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.jxpath.JXPathContext;
}

@members {
Map<String,Object> varMap = new HashMap();
Map<String,String> vMap = new HashMap();

public class PickSampleRequest {
String input;
public String getInput() { return input; }
public void setInput(String s) { input = s; }
}
PickSampleRequest pickSampleRequest = new PickSampleRequest();

public class PickSampleResponse {
String result;
public String getResult() { return result; }
public void setResult(String s) { result = s; }
}
PickSampleResponse pickSampleResponse = new PickSampleResponse();

public class SayGoodbye {
String in;
public String getIn() { return in; }
public void setIn(String s) { in = s; }
}
SayGoodbye sayGoodbye = new SayGoodbye();

public class SayGoodbyeResponse {
String out;
public String getOut() { return out; }
public void setOut(String s) { out = s; }
}
SayGoodbyeResponse sayGoodbyeResponse = new SayGoodbyeResponse();

public class PickSampleRequestMessage_ {
PickSampleRequest payload = new PickSampleRequest();
public PickSampleRequest getPayload() { return payload; }
}
PickSampleRequestMessage_ pickSampleRequestMessage_ = new PickSampleRequestMessage_();

public class PickSampleResponseMessage_ {
PickSampleResponse payload = new PickSampleResponse();
public PickSampleResponse getPayload() { return payload; }
}
PickSampleResponseMessage_ pickSampleResponseMessage_ = new PickSampleResponseMessage_();

public class SayGoodbyeRequest_ {
SayGoodbye parameters = new SayGoodbye();
public SayGoodbye getParameters() { return parameters; }
}
SayGoodbyeRequest_ sayGoodbyeRequest_ = new SayGoodbyeRequest_();

public class SayGoodbyeResponse_ {
SayGoodbyeResponse parameters = new SayGoodbyeResponse();
public SayGoodbyeResponse getParameters() { return parameters; }
}
SayGoodbyeResponse_ sayGoodbyeResponse_ = new SayGoodbyeResponse_();

PickSampleRequestMessage_ input = pickSampleRequestMessage_;
PickSampleResponseMessage_ output = pickSampleResponseMessage_;
SayGoodbyeRequest_ clientRequest = sayGoodbyeRequest_;
SayGoodbyeResponse_ clientResponse = sayGoodbyeResponse_;

 boolean verify() {
  boolean result = true;
  for (String key : vMap.keySet()) {
   String expectedVal = trimQuote(vMap.get(key));
   String actualValue = getVarValue(key);
   if (!expectedVal.equals(actualValue)) {
    System.out.println("Actual: " + key + " : " + actualValue + " <> Expected: " + key + " : " + expectedVal);
    result = false; 
   }
  }
  return result;
 }

String addQuote(String s) { return "'" + s +"'"; }
String trimQuote(String s) { return s.replace("'",""); }

JXPathContext getCtx(String varPath) {
String s = varPath.substring(0, varPath.indexOf('.'));
return JXPathContext.newContext(varMap.get(s)); }

String getxPath(String varPath) {
String path = varPath.substring(varPath.indexOf('.') + 1);
return path.replace(".", "/"); }

void setVarValue(String path, String value) { getCtx(path).setValue(getxPath(path), value); }
String getVarValue(String path) { return (String)getCtx(path).getValue(getxPath(path)); }
}

picksample :
{
varMap.put("input", input);
varMap.put("output", output);
varMap.put("clientRequest", clientRequest);
varMap.put("clientResponse", clientResponse);
}

v0

'Pick'

('sayHello'

'AssignHello'
{
pickSampleResponse.result="tns:result";
output.payload.result="Hello " + input.payload.input;
}

'replyHello'

| 'sayGoodbye'

'AssignGoodbye'
{
sayGoodbyeResponse.out="tns:out";
clientResponse.parameters.out="Goodbye " + clientRequest.parameters.in;
}

'ReplyBye'
)
v;

v0 : '(' kvpi (',' kvpi) + ')' ;

v :  '(' kvpo (',' kvpo) + ')'
{
  if (!verify()) {
     System.out.println("ERROR: unexpected output");
  }
};

kvpi : '[' key ',' value ']'
{
setVarValue($key.text, trimQuote($value.text));
};

kvpo : '[' key ',' value ']'
{
vMap.put($key.text, $value.text);
};

key : varname ;
value : STRING ;
varname  : (LETTERS | ALFA) (LETTERS | NUMBER | ALFA)* ;
LETTERS : ('a' .. 'z' | 'A' .. 'Z') + ;
NUMBER  : ('1' .. '9') + ('0' .. '9') + ;
ALFA : ('_' | '.') + ;
INT  : ([0-9|?])+ ;
STRING : '\'' .*? '\'';
WS  : [ \t\r\n]+ -> skip ;


/*
// Automatically generated by EDJ BPEL2CFG Transformer : Fri Mar 23 16:50:02 CET 2018

grammar PickSample;

options {language=Java;}

@header {
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.jxpath.JXPathContext;
}

@members {
Map<String,Object> varMap = new HashMap();
Map<String,String> vMap = new HashMap();

public class PickSampleRequest {
String input;
public String getInput() { return input; }
public void setInput(String s) { input = s; }
}
PickSampleRequest pickSampleRequest = new PickSampleRequest();

public class PickSampleResponse {
String result;
public String getResult() { return result; }
public void setResult(String s) { result = s; }
}
PickSampleResponse pickSampleResponse = new PickSampleResponse();

public class SayGoodbye {
String in;
public String getIn() { return in; }
public void setIn(String s) { in = s; }
}
SayGoodbye sayGoodbye = new SayGoodbye();

public class SayGoodbyeResponse {
String out;
public String getOut() { return out; }
public void setOut(String s) { out = s; }
}
SayGoodbyeResponse sayGoodbyeResponse = new SayGoodbyeResponse();

public class PickSampleRequestMessage {
PickSampleRequest payload = new PickSampleRequest();
public PickSampleRequest getPayload() { return payload; }
}
PickSampleRequestMessage pickSampleRequestMessage = new PickSampleRequestMessage();

public class PickSampleResponseMessage {
PickSampleResponse payload = new PickSampleResponse();
public PickSampleResponse getPayload() { return payload; }
}
PickSampleResponseMessage pickSampleResponseMessage = new PickSampleResponseMessage();

public class SayGoodbyeRequest {
SayGoodbye parameters = new SayGoodbye();
public SayGoodbye getParameters() { return parameters; }
}
SayGoodbyeRequest sayGoodbyeRequest = new SayGoodbyeRequest();

public class SayGoodbyeResponse_ {
SayGoodbyeResponse parameters = new SayGoodbyeResponse();
public SayGoodbyeResponse getParameters() { return parameters; }
}
SayGoodbyeResponse_ sayGoodbyeResponse_ = new SayGoodbyeResponse_();

PickSampleRequestMessage input = pickSampleRequestMessage;
PickSampleResponseMessage output = pickSampleResponseMessage;
SayGoodbyeRequest clientRequest = sayGoodbyeRequest;
SayGoodbyeResponse_ clientResponse = sayGoodbyeResponse_;

 boolean verify() {
  boolean result = true;
  for (String key : vMap.keySet()) {
   String expectedVal = trimQuote(vMap.get(key));
   String actualValue = getVarValue(key);
//System.out.println("Actual: " + key + " : " + actualValue + " <> Expected: " + key + " : " + expectedVal);
   if (!expectedVal.equals(actualValue)) {
    System.out.println("Actual: " + key + " : " + actualValue + " <> Expected: " + key + " : " + expectedVal);
    result = false; 
   }
  }
  return result;
 }

String addQuote(String s) { return "'" + s +"'"; }
String trimQuote(String s) { return s.replace("'",""); }

JXPathContext getCtx(String varPath) {
String s = varPath.substring(0, varPath.indexOf('.'));
return JXPathContext.newContext(varMap.get(s)); }

String getxPath(String varPath) {
String path = varPath.substring(varPath.indexOf('.') + 1);
return path.replace(".", "/"); }

void setVarValue(String path, String value) 
{ System.out.println("setVarValue: " + path + " : " + value); 
	getCtx(path).setValue(getxPath(path), value); 
}
String getVarValue(String path) { return (String)getCtx(path).getValue(getxPath(path)); }
}

picksample :
{
varMap.put("input", input);
varMap.put("output", output);
varMap.put("clientRequest", clientRequest);
varMap.put("clientResponse", clientResponse);
System.out.println("varMap: " + varMap.toString()); 
}

v0

'Pick'

('sayHello'

'AssignHello'
{
pickSampleResponse.result="tns:result";
output.payload.result="Hello " + input.payload.input;
}

'replyHello'

| 'sayGoodbye'

'AssignGoodbye'
{
sayGoodbyeResponse.out="tns:out";
clientResponse.parameters.out="Goodbye " + clientRequest.parameters.in; //@RRRR
System.out.println("clientResponse.parameters.out: " + clientResponse.parameters.out); 
}

'ReplyBye'
)
v;

v0 : '(' kvpi (',' kvpi) + ')' ;

v :  '(' kvpo (',' kvpo) + ')'
{
  if (!verify()) {
     System.out.println("ERROR: unexpected output");
  }
};

kvpi : '[' key ',' value ']'
{
setVarValue($key.text, trimQuote($value.text));
};

kvpo : '[' key ',' value ']'
{
vMap.put($key.text, $value.text);
};

key : varname ;
value : STRING ;
varname  : (LETTERS | ALFA) (LETTERS | NUMBER | ALFA)* ;
LETTERS : ('a' .. 'z' | 'A' .. 'Z') + ;
NUMBER  : ('1' .. '9') + ('0' .. '9') + ;
ALFA : ('_' | '.') + ;
INT  : ([0-9|?])+ ;
STRING : '\'' .*? '\'';
WS  : [ \t\r\n]+ -> skip ;
*/


