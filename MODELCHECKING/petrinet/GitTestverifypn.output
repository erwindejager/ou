lola: NET
lola:   reading net from GitTest_pn.lola
lola:   finished parsing
lola:   closed net file GitTest_pn.lola
lola:   87/65536 symbol table entries, 0 collisions
lola:   preprocessing... 
lola:   finding significant places
lola:   37 places, 50 transitions, 32 significant places
lola:   computing forward-conflicting sets
lola:   computing back-conflicting sets
lola:   58 transition conflict sets
lola: TASK
lola:   read: AG (EF (p36 > 0))
lola:   formula length: 17
lola:   checking liveness
lola:   liveness not yet implemented, converting to CTL...
lola:   processed formula: !(E(TRUE U !(E(TRUE U p36 > 0))))
lola:   processed formula length: 33
lola:   3 rewrites
lola:   formula mentions 1 of 37 places; total mentions: 1
lola: STORE
lola:   using a bit-perfect encoder (--encoder=bit)
lola:   using 128 bytes per marking, with 0 unused bits
lola:   using a prefix tree store (--store=prefix)
lola: RUNNING
lola:   CTL formula contains 2 significant temporal operators and needs 9 bytes of payload
lola: RESULT
lola:   result: yes
lola:   The net satisfies the given formula.
lola:   12 markings, 34 edges
lola: NET
lola:   reading net from GitTest_ch.lola
lola:   finished parsing
lola:   closed net file GitTest_ch.lola
lola:   9/65536 symbol table entries, 0 collisions
lola:   preprocessing... 
lola:   finding significant places
lola:   6 places, 3 transitions, 3 significant places
lola:   computing forward-conflicting sets
lola:   computing back-conflicting sets
lola:   4 transition conflict sets
lola: TASK
lola:   read: (p4 > 0 -> AG (!(DEADLOCK)))
lola:   formula length: 28
lola:   checking a Boolean combination of subproblems
lola: RUNNING
lola:   ========================================
lola:   ...considering subproblem: p4 <= 0
lola:   ========================================
lola:   SUBTASK
lola:     checking initial satisfaction
lola:     processed formula with 1 atomic propositions
lola:   RUNNING
lola:   SUBRESULT
lola:     result: yes
lola:     The net satisfies the property already in its initial state.
lola:     print witness state (--state)
lola:     writing witness state to stdout
lola:     closed witness state file stdout
lola:     print witness path (--path)
lola:     writing witness path to stdout
lola:     closed witness path file stdout
lola:     0 markings, 0 edges
lola: RESULT
lola:   result: yes
lola:   The Boolean predicate is true.
lolalola:   print witness state (--state)
: lola:   writing witness state to stdout
 lola:   no witness state generated
 ========================================
lola:   closed witness state file stdout
