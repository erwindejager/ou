import "util.eol";
//--------------------------------------------------------
// <xsd:element ref="variables" minOccurs="0"/>
//--------------------------------------------------------
 operation getVariables() : BPEL!t_variables {
 	return BPEL!t_variables.all().first();
 }
 
operation getVariableNames() : Collection {
 	return getVariables().collect(v|v.a_name);
 }

operation getVariablesAsList() : Collection {
 	return getVariables().getVarList();
}
 
operation BPEL!t_variables getVarList() : Collection {
 	return self.children.collect(v|v.a_name);
}

operation BPEL!t_variables transformMembers(sb : Any) {
	transformChildrenMembers(sb, self);
} 

operation BPEL!t_variable transform(sb : Any) {
	sb.append(self.a_name.toLowercase());
} 

operation BPEL!t_variable transformMembers(sb : Any) {
	sb.append(tranlateXmlPrimitiveTypesToJava(trimNs(self.a_messageType)).firstToUpperCase() + "_ " + self.a_name.firstToLowerCase() + " = ");
	sb.append(tranlateXmlPrimitiveTypesToJava(trimNs(self.a_messageType)).firstToLowerCase() + "_;"); newline(sb);
} 

operation BPEL!t_variable transformVarMap(sb : Any, context : Map) {
	var fac = getFactory(context);
	if (fac <> null) {
		addFactory(context, fac);
		sb.append("JXPathContext " + self.a_name.firstToLowerCase() + "Ctx" + " = JXPathContext.newContext(");
		sb.append(self.a_name.firstToLowerCase() + ");");newline(sb);
		sb.append(self.a_name.firstToLowerCase() + "Ctx.setFactory(new " + fac + "());");newline(sb);
	}
	sb.append("varMap.put(\"" + self.a_name.firstToLowerCase() + "\", " + self.a_name.firstToLowerCase() + "Ctx);"); newline(sb);
} 

