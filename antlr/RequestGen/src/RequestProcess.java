import java.io.BufferedReader;
import java.io.IOException;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;

import org.antlr.v4.runtime.BailErrorStrategy;
import org.antlr.v4.runtime.BaseErrorListener;
import org.antlr.v4.runtime.CharStreams;
import org.antlr.v4.runtime.CodePointCharStream;
import org.antlr.v4.runtime.CommonTokenStream;
import org.antlr.v4.runtime.tree.ParseTree;

public class RequestProcess {
    public static void main(String[] args) throws Exception {
    	List<String> requirements = new ArrayList<>();
    	
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS NotReinjectHandleComplexRequest PrepareHandleComplexRequestReply HandleComplexRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS NotReinjectHandleComplexRequest PrepareHandleComplexRequestReply HandleComplexRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest elseif PrepareCheckProcessability CheckProcessabilityWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS NotReinjectRejectRequest PrepareRejectRequestReply RejectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
       	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>,<reinjectRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest else UnknownRequest (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>,<reinjectRequestOutput.parameters.result, 'Error'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest else UnknownRequest IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'C'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'C'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'C'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS NotReinjectHandleRequest PrepareHandleRequestReply HandleRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'C'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'C'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'C'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS NotReinjectHandleRequest PrepareHandleRequestReply HandleRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<handleRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<handleRequestOutput.parameters.result, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS NotReinjectHandleRequest PrepareHandleRequestReply HandleRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService handleRequest PrepareHandleRequest HandleService PrepareClassifyRequest ClassifyRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)");
//30    	
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS NotReinjectHandleComplexRequest PrepareHandleComplexRequestReply HandleComplexRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<handleComplexRequestOutput.parameters.result, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS NotReinjectHandleComplexRequest PrepareHandleComplexRequestReply HandleComplexRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest elseif PrepareCheckProcessability CheckProcessabilityWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS NotReinjectRejectRequest PrepareRejectRequestReply RejectRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest else UnknownRequest (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest else UnknownRequest IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS NotReinjectHandleRequest PrepareHandleRequestReply HandleRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS NotReinjectHandleRequest PrepareHandleRequestReply HandleRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS NotReinjectHandleRequest PrepareHandleRequestReply HandleRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, '?'>)HandleService handleComplexRequest PrepareHandleComplexRequest HandleService PrepareClassifyRequest ClassifyRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleComplexRequestOutput.parameters.result, 'Ok'>)");
//58    	
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS NotReinjectHandleComplexRequest PrepareHandleComplexRequestReply HandleComplexRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS NotReinjectHandleComplexRequest PrepareHandleComplexRequestReply HandleComplexRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest elseif PrepareCheckProcessability CheckProcessabilityWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<rejectRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<rejectRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<rejectRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<rejectRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<rejectRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS NotReinjectRejectRequest PrepareRejectRequestReply RejectRequestReply (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<rejectRequestOutput.parameters.result, 'Ok'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<rejectRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<rejectRequestOutput.parameters.result, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest else UnknownRequest (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest else UnknownRequest IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS NotReinjectHandleRequest PrepareHandleRequestReply HandleRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS NotReinjectHandleRequest PrepareHandleRequestReply HandleRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS NotReinjectHandleRequest PrepareHandleRequestReply HandleRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<handleRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<handleRequestOutput.parameters.result, '?'>)HandleService rejectRequest PrepareRejectRequest HandleService PrepareClassifyRequest ClassifyRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
//88
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<reinjectRequestOutput.parameters.result, 'Ok'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS NotReinjectHandleComplexRequest PrepareHandleComplexRequestReply HandleComplexRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, 'handleComplexRequest'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, 'Ok'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS NotReinjectHandleComplexRequest PrepareHandleComplexRequestReply HandleComplexRequestReply (<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, 'Ok'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest elseif PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValidComplex PrepareProcessRequest ProcessRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, 'handleComplexRequest'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest elseif PrepareCheckProcessability CheckProcessabilityWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'handleComplexRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, 'handleComplexRequest'>)");
    	
    	requirements.add("(<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, 'Ok'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS NotReinjectRejectRequest PrepareRejectRequestReply RejectRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest elseif PrepareInvokeRejectRequest InvokeRejectRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, 'rejectRequest'>)");
    	
    	requirements.add("(<reinjectRequestInput.parameters.service, 'unknown'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest else UnknownRequest (<reinjectRequestInput.parameters.service, 'unknown'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'unknown'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest else UnknownRequest IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'unknown'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, 'Error'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");

    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'C'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'C'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, 'Ok'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'C'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS NotReinjectHandleRequest PrepareHandleRequestReply HandleRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'C'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType else PrepareCreateManualTask CreateManualTaskWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, 'handleRequest'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, 'Ok'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS NotReinjectHandleRequest PrepareHandleRequestReply HandleRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'N'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid else PrepareRejectReq RejectRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, 'handleRequest'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS IfReinject PrepareReinjectRequestReply ReinjectRequestReply (<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, 'Ok'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS NotReinjectHandleRequest PrepareHandleRequestReply HandleRequestReply (<reinjectRequestInput.parameters.service, 'rejectRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS AssignValid IfValid PrepareProcessRequest ProcessRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, 'handleRequest'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest HandleService PrepareClassifyRequest ClassifyRequestWS AssignRequestType IfStandardRequest PrepareCheckProcessability CheckProcessabilityWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, 'handleRequest'>)");
    	requirements.add("(<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<classifyRequestWSResponse.parameters.classifyRequestReturn.value, 'S'>,<checkProcessabilityWSResponse.parameters.checkProcessabilityReturn.value, 'V'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, '?'>)HandleService reinjectRequest PrepareReinjectRequest HandleService PrepareClassifyRequest ClassifyRequestWS PrepareExceptionTask InvokeCreateExceptionTask StopProcess (<reinjectRequestInput.parameters.service, 'handleRequest'>,<reinjectRequestInput.parameters.payload, '123'>,<reinjectRequestOutput.parameters.result, '?'>,<createExceptionTaskWSRequest.parameters.requestInput.triggerEvent, 'handleRequest'>)");

    	int i = 1;
    	for (String s : requirements) {
        	testRequirement(s, i++);    		
    	}
		
    }

	private static void testRequirement(String requirement, int i) throws IOException {
		StringReader sr = new StringReader(requirement);
        BufferedReader br = new BufferedReader(sr);
        
		CodePointCharStream input = CharStreams.fromReader(br);
		
		HandleRequestLexer lexer = new HandleRequestLexer(input);

		CommonTokenStream tokens = new CommonTokenStream(lexer);

		HandleRequestParser parser = new HandleRequestParser(tokens);
		
		List<String> syntaxErrors = new ArrayList<>();
		
		parser.removeErrorListeners();
		parser.addErrorListener(new BaseErrorListener() {
			@Override
			public void syntaxError(org.antlr.v4.runtime.Recognizer<?,?> recognizer, 
					java.lang.Object offendingSymbol, int line, int charPositionInLine, 
					java.lang.String msg, org.antlr.v4.runtime.RecognitionException e) {
				syntaxErrors.add(msg);
				System.out.println(Integer.toString(i) +  " FAIL : "+ msg);
			}			
		});		
		
		parser.setErrorHandler(new BailErrorStrategy());
		
		try {
			ParseTree tree = parser.handlerequest();
			
			System.out.println(Integer.toString(i) + " PASSED : "+ tree.toStringTree(parser)); // print LISP-style tree
		} catch (ParseCatchException e) {
			if (e.isError()) {
				System.out.println(Integer.toString(i) + " FAIL : " + e.getMsg());				
			} else {
				System.out.println(Integer.toString(i) + " PASSED : Handle catch : " + e.getMsg());
			}
		} catch (Exception e) {
//			System.out.println(Integer.toString(i) + " Parse exception : " + e.toString());			
//			System.out.println(Integer.toString(i) + " Parse exception : " + e.getCause());			
		}
	}
}