// Automatically generated by EDJ BPEL2CFG Transformer : Thu Apr 05 15:57:31 CEST 2018

grammar ComplextArraySample;

options {language=Java;}

@header {
import java.util.HashMap;
import java.util.Map;
import java.util.List;
import java.util.ArrayList;
import org.apache.commons.jxpath.AbstractFactory;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
}

@members {
Map<String,Object> varMap = new HashMap();
Map<String,String> vMap = new HashMap();

public class ComplextArraySampleRequest {
List<People> input = new ArrayList<People>();
public List<People> getInput() { return input; }
public void setInput(People s) { input.add(s); }
}
ComplextArraySampleRequest complextArraySampleRequest = new ComplextArraySampleRequest();

class PeopleFactory extends AbstractFactory {
public boolean createObject(JXPathContext context, Pointer pointer, Object parent, String name, int index) {
if ((parent instanceof ComplextArraySampleRequest) && name.equals("input")) { ((ComplextArraySampleRequest)parent).setInput(new People()); return true; }
return false; }}

public class ComplextArraySampleResponse {
People result = new People();
public People getResult() { return result; }
public void setResult(People s) { result = s; }
int total;
public int getTotal() { return total; }
public void setTotal(int s) { total = s; }
}
ComplextArraySampleResponse complextArraySampleResponse = new ComplextArraySampleResponse();

public class People {
String name;
public String getName() { return name; }
public void setName(String s) { name = s; }
int age;
public int getAge() { return age; }
public void setAge(int s) { age = s; }
}
public class ComplextArraySampleRequestMessage_ {
ComplextArraySampleRequest payload = new ComplextArraySampleRequest();
public ComplextArraySampleRequest getPayload() { return payload; }
}
ComplextArraySampleRequestMessage_ complextArraySampleRequestMessage_ = new ComplextArraySampleRequestMessage_();

public class ComplextArraySampleResponseMessage_ {
ComplextArraySampleResponse payload = new ComplextArraySampleResponse();
public ComplextArraySampleResponse getPayload() { return payload; }
}
ComplextArraySampleResponseMessage_ complextArraySampleResponseMessage_ = new ComplextArraySampleResponseMessage_();

ComplextArraySampleRequestMessage_ input = complextArraySampleRequestMessage_;
ComplextArraySampleResponseMessage_ output = complextArraySampleResponseMessage_;

}

complextarraysample :
{
JXPathContext inputCtx = JXPathContext.newContext(input);
inputCtx.setFactory(new PeopleFactory());
varMap.put("input", inputCtx);
JXPathContext outputCtx = JXPathContext.newContext(output);
outputCtx.setFactory(new PeopleFactory());
varMap.put("output", outputCtx);
}

v0

'receiveInput'

'Assign'
{
complextArraySampleResponse.result.name = "tns:name";
complextArraySampleResponse.result.age = 0;
complextArraySampleResponse.total = 0;

output.payload.total = Utils.getVarValueInt("count(input/payload/input)", varMap);
output.payload.result = (People) Utils.getVarValueO("input/payload/input[last()]", varMap);
}

'replyOutput'
v;

v0 : '(' kvpi (',' kvpi) + ')' ;

v :  '(' kvpo (',' kvpo) + ')'
{
  if (!Utils.verify(vMap, varMap)) {
     System.out.println("ERROR: unexpected output");
  }
};

kvpi : '<' key ',' value '>'
{
Utils.setVarValue($key.text, Utils.trimQuote($value.text), varMap);
};

kvpo : '<' key ',' value '>'
{
vMap.put($key.text, $value.text);
};

key : varname ;
value : STRING ;
index : '[' NUMBER ']' ;
varname  : (LETTERS | ALFA) (LETTERS | NUMBER | ALFA | index)* ;
LETTERS : ('a' .. 'z' | 'A' .. 'Z') + ;
NUMBER  : ('1' .. '9') + ;
ALFA : ('_' | '.') + ;
INT  : ([0-9|?])+ ;
STRING : '\'' .*? '\'';
WS  : [ \t\r\n]+ -> skip ;




/*
// Automatically generated by EDJ BPEL2CFG Transformer : Wed Apr 04 21:53:38 CEST 2018

grammar ComplextArraySample;

options {language=Java;}

@header {
import java.util.HashMap;
import java.util.Map;
import java.util.List;
import java.util.ArrayList;
import org.apache.commons.jxpath.AbstractFactory;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
}

@members {
Map<String,Object> varMap = new HashMap();
Map<String,String> vMap = new HashMap();

public class ComplextArraySampleRequest {
List<People> input = new ArrayList<People>();
public List<People> getInput() { return input; }
public void setInput(People s) { input.add(s); }
}
ComplextArraySampleRequest complextArraySampleRequest = new ComplextArraySampleRequest();

class PeopleFactory extends AbstractFactory {
public boolean createObject(JXPathContext context, Pointer pointer, Object parent, String name, int index) {
if ((parent instanceof ComplextArraySampleRequest) && name.equals("input")) { ((ComplextArraySampleRequest)parent).setInput(new People()); return true; }
return false; }}

public class ComplextArraySampleResponse {
People result = new People();
public People getResult() { return result; }
public void setResult(People s) { result = s; }
int total;
public int getTotal() { return total; }
public void setTotal(int s) { total = s; }
}
ComplextArraySampleResponse complextArraySampleResponse = new ComplextArraySampleResponse();

public class People {
String name;
public String getName() { return name; }
public void setName(String s) { name = s; }
int age;
public int getAge() { return age; }
public void setAge(int s) { age = s; }
}
public class ComplextArraySampleRequestMessage_ {
ComplextArraySampleRequest payload = new ComplextArraySampleRequest();
public ComplextArraySampleRequest getPayload() { return payload; }
}
ComplextArraySampleRequestMessage_ complextArraySampleRequestMessage_ = new ComplextArraySampleRequestMessage_();

public class ComplextArraySampleResponseMessage_ {
ComplextArraySampleResponse payload = new ComplextArraySampleResponse();
public ComplextArraySampleResponse getPayload() { return payload; }
}
ComplextArraySampleResponseMessage_ complextArraySampleResponseMessage_ = new ComplextArraySampleResponseMessage_();

ComplextArraySampleRequestMessage_ input = complextArraySampleRequestMessage_;
ComplextArraySampleResponseMessage_ output = complextArraySampleResponseMessage_;

}

complextarraysample :
{
JXPathContext inputCtx = JXPathContext.newContext(input);
inputCtx.setFactory(new PeopleFactory());
varMap.put("input", inputCtx);
JXPathContext outputCtx = JXPathContext.newContext(output);
outputCtx.setFactory(new PeopleFactory());
varMap.put("output", outputCtx);
}

v0

'receiveInput'

'Assign'
{
complextArraySampleResponse.result.name = "tns:name";
complextArraySampleResponse.result.age = 0;
complextArraySampleResponse.total = 0;

output.payload.total = Utils.getVarValueInt("count(input/payload/input)", varMap);
output.payload.result = (People) Utils.getVarValueO("input/payload/input[last()]", varMap);
}

'replyOutput'
v;

v0 : '(' kvpi (',' kvpi) + ')' ;

v :  '(' kvpo (',' kvpo) + ')'
{
  if (!Utils.verify(vMap, varMap)) {
     System.out.println("ERROR: unexpected output");
  }
};

kvpi : '<' key ',' value '>'
{
Utils.setVarValue($key.text, Utils.trimQuote($value.text), varMap);
};

kvpo : '<' key ',' value '>'
{
vMap.put($key.text, $value.text);
};

key : varname ;
value : STRING ;
index : '[' NUMBER ']' ;
varname  : (LETTERS | ALFA) (LETTERS | NUMBER | ALFA | index)* ;
LETTERS : ('a' .. 'z' | 'A' .. 'Z') + ;
NUMBER  : ('1' .. '9') + ;
ALFA : ('_' | '.') + ;
INT  : ([0-9|?])+ ;
STRING : '\'' .*? '\'';
WS  : [ \t\r\n]+ -> skip ;
 */